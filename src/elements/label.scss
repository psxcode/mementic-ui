
.ui.label {
  display: inline-block;
  line-height: 1;
  vertical-align: $vertical-align;

  margin: $vertical-margin $horizontal-margin;

  background-color: $background-color;
  background-image: $background-image;
  padding: $vertical-padding $horizontal-padding;
  color: $color;

  text-transform: $text-transform;
  font-weight: $font-weight;

  border: $border;
  border-radius: $border-radius;
  transition: $transition;
}

.ui.label:first-child {
  margin-left: 0;
}

.ui.label:last-child {
  margin-right: 0;
}

/* Link */
a.ui.label {
  cursor: pointer;
}

/* Inside Link */
.ui.label > a {
  cursor: pointer;
  color: inherit;
  opacity: $link-opacity;
  transition: $link-transition;
}

.ui.label > a:hover {
  opacity: 1;
}

/* Image */
.ui.label > img {
  width: auto !important;
  vertical-align: middle;
  height: $image-height !important;
}

/* Icon */
.ui.label > .icon {
  width: auto;
  margin: 0 $icon-distance 0 0;
}

/* Detail */
.ui.label > .detail {
  display: inline-block;
  vertical-align: top;
  font-weight: $detail-font-weight;
  margin-left: $detail-margin;
  opacity: $detail-opacity;
}

.ui.label > .detail .icon {
  margin: 0 $detail-icon-distance 0 0;
}

/* Removable label */
.ui.label > .close.icon,
.ui.label > .delete.icon {
  cursor: pointer;
  margin-right: 0;
  margin-left: $delete-margin;
  font-size: $delete-size;
  opacity: $delete-opacity;
  transition: $delete-transition;
}

.ui.label > .delete.icon:hover {
  opacity: 1;
}

/*-------------------
       Group
--------------------*/

.ui.labels > .label {
  margin: 0 $group-horizontal-margin $group-vertical-margin 0;
}

/*-------------------
       Coupling
--------------------*/

.ui.header > .ui.label {
  margin-top: $line-height-offset;
}

/* Remove border radius on attached segment */
.ui.attached.segment > .ui.top.left.attached.label,
.ui.bottom.attached.segment > .ui.top.left.attached.label {
  border-top-left-radius: 0;
}

.ui.attached.segment > .ui.top.right.attached.label,
.ui.bottom.attached.segment > .ui.top.right.attached.label {
  border-top-right-radius: 0;
}

.ui.top.attached.segment > .ui.bottom.left.attached.label {
  border-bottom-left-radius: 0;
}

.ui.top.attached.segment > .ui.bottom.right.attached.label {
  border-bottom-right-radius: 0;
}

/* Padding on next content after a label */
.ui.top.attached.label:first-child + :not(.attached),
.ui.top.attached.label + [class*="right floated"] + * {
  margin-top: $attached-segment-padding !important;
}

.ui.bottom.attached.label:first-child ~ :last-child:not(.attached) {
  margin-top: 0;
  margin-bottom: $attached-segment-padding !important;
}

/*******************************
             Types
*******************************/

.ui.image.label {
  width: auto !important;
  margin-top: 0;
  margin-bottom: 0;
  max-width: 9999px;
  vertical-align: baseline;
  text-transform: none;

  background: $image-label-background;
  padding: $image-label-padding;
  border-radius: $image-label-border-radius;
  box-shadow: $image-label-box-shadow;
}

.ui.image.label img {
  display: inline-block;
  vertical-align: top;

  height: $image-label-image-height;
  margin: $image-label-image-margin;
  border-radius: $image-label-image-border-radius;
}

.ui.image.label .detail {
  background: $image-label-detail-background;
  margin: $image-label-detail-margin;
  padding: $image-label-detail-padding;
  border-radius: 0 $image-label-border-radius $image-label-border-radius 0;
}

/*-------------------
         Tag
--------------------*/

.ui.tag.labels .label,
.ui.tag.label {
  margin-left: 1em;
  position: relative;
  padding-left: $tag-horizontal-padding;
  padding-right: $tag-horizontal-padding;

  border-radius: 0 $border-radius $border-radius 0;
  transition: $tag-transition;
}

.ui.tag.labels .label:before,
.ui.tag.label:before {
  position: absolute;
  transform: translateY(-50%) translateX(50%) rotate(-45deg);

  top: $tag-triangle-top-offset;
  right: $tag-triangle-right-offset;
  content: '';

  background-color: inherit;
  background-image: $tag-triangle-background-image;

  width: $tag-triangle-size;
  height: $tag-triangle-size;
  transition: $tag-transition;
}

.ui.tag.labels .label:after,
.ui.tag.label:after {
  position: absolute;
  content: '';
  top: 50%;
  left: -($tag-circle-size / 2);

  margin-top: -($tag-circle-size / 2);
  background-color: $tag-circle-color !important;
  width: $tag-circle-size;
  height: $tag-circle-size;

  box-shadow: $tag-circle-box-shadow;
  border-radius: $circular-radius;
}

/*-------------------
    Corner Label
--------------------*/

.ui.corner.label {
  position: absolute;
  top: 0;
  right: 0;
  margin: 0;
  padding: 0;
  text-align: center;

  border-color: $background-color;

  width: $corner-triangle-size;
  height: $corner-triangle-size;
  z-index: $corner-triangle-z-index;
  transition: $corner-triangle-transition;
}

/* Icon Label */
.ui.corner.label {
  background-color: transparent !important;
}

.ui.corner.label:after {
  position: absolute;
  content: "";
  right: 0;
  top: 0;
  z-index: -1;

  width: 0;
  height: 0;
  background-color: transparent !important;

  border-top: 0 solid transparent;
  border-right: $corner-triangle-size solid transparent;
  border-bottom: $corner-triangle-size solid transparent;
  border-left: 0 solid transparent;

  border-right-color: inherit;
  transition: $corner-triangle-transition;
}

.ui.corner.label .icon {
  cursor: default;
  position: relative;
  top: $corner-icon-top-offset;
  left: $corner-icon-left-offset;
  font-size: $corner-icon-size;
  margin: 0;
}

/* Left Corner */
.ui.left.corner.label,
.ui.left.corner.label:after {
  right: auto;
  left: 0;
}

.ui.left.corner.label:after {
  border-top: $corner-triangle-size solid transparent;
  border-right: $corner-triangle-size solid transparent;
  border-bottom: 0 solid transparent;
  border-left: 0 solid transparent;

  border-top-color: inherit;
}

.ui.left.corner.label .icon {
  left: - $corner-icon-left-offset;
}

/* Segment */
.ui.segment > .ui.corner.label {
  top: -1px;
  right: -1px;
}

.ui.segment > .ui.left.corner.label {
  right: auto;
  left: -1px;
}

/*-------------------
       Ribbon
--------------------*/

.ui.ribbon.label {
  position: relative;
  margin: 0;
  min-width: max-content;
  border-radius: 0 $border-radius $border-radius 0;
  border-color: $ribbon-shadow-color;
}

.ui.ribbon.label:after {
  position: absolute;
  content: '';

  top: 100%;
  left: 0;
  background-color: transparent !important;

  border-style: solid;
  border-width: 0 $ribbon-triangle-size $ribbon-triangle-size 0;
  border-color: transparent;
  border-right-color: inherit;

  width: 0;
  height: 0;
}

/* Positioning */
.ui.ribbon.label {
  left: $ribbon-offset;
  margin-right: - $ribbon-triangle-size;
  padding-left: $ribbon-distance;
  padding-right: $ribbon-triangle-size;
}

.ui[class*="right ribbon"].label {
  left: $right-ribbon-offset;
  padding-left: $ribbon-triangle-size;
  padding-right: $ribbon-distance;
}

/* Right Ribbon */
.ui[class*="right ribbon"].label {
  text-align: left;
  transform: translateX(-100%);
  border-radius: $border-radius 0 0 $border-radius;
}

.ui[class*="right ribbon"].label:after {
  left: auto;
  right: 0%;

  border-style: solid;
  border-width: $ribbon-triangle-size $ribbon-triangle-size 0 0;
  border-color: transparent;
  border-top-color: inherit;
}

/* Inside Table */
.ui.image > .ribbon.label,
.ui.card .image > .ribbon.label {
  position: absolute;
  top: $ribbon-image-top-distance;
}

.ui.card .image > .ui.ribbon.label,
.ui.image > .ui.ribbon.label {
  left: $ribbon-image-offset;
}

.ui.card .image > .ui[class*="right ribbon"].label,
.ui.image > .ui[class*="right ribbon"].label {
  left: $right-ribbon-image-offset;
  padding-left: $horizontal-padding;
}

/* Inside Table */
.ui.table td > .ui.ribbon.label {
  left: $ribbon-table-offset;
}

.ui.table td > .ui[class*="right ribbon"].label {
  left: $right-ribbon-table-offset;
  padding-left: $horizontal-padding;
}

/*-------------------
      Attached
--------------------*/

.ui[class*="top attached"].label,
.ui.attached.label {
  width: 100%;
  position: absolute;
  margin: 0;
  top: 0;
  left: 0;

  padding: $attached-vertical-padding $attached-horizontal-padding;

  border-radius: $attached-corner-border-radius $attached-corner-border-radius 0 0;
}

.ui[class*="bottom attached"].label {
  top: auto;
  bottom: 0;
  border-radius: 0 0 $attached-corner-border-radius $attached-corner-border-radius;
}

.ui[class*="top left attached"].label {
  width: auto;
  margin-top: 0 !important;
  border-radius: $attached-corner-border-radius 0 $attached-border-radius 0;
}

.ui[class*="top right attached"].label {
  width: auto;
  left: auto;
  right: 0;
  border-radius: 0 $attached-corner-border-radius 0 $attached-border-radius;
}

.ui[class*="bottom left attached"].label {
  width: auto;
  top: auto;
  bottom: 0;
  border-radius: 0 $attached-border-radius 0 $attached-corner-border-radius;
}

.ui[class*="bottom right attached"].label {
  top: auto;
  bottom: 0;
  left: auto;
  right: 0;
  width: auto;
  border-radius: $attached-border-radius 0 $attached-corner-border-radius 0;
}

/*******************************
             States
*******************************/

/*-------------------
      Disabled
--------------------*/

.ui.label.disabled {
  opacity: 0.5;
}

/*-------------------
        Hover
--------------------*/

a.ui.labels .label:hover,
a.ui.label:hover {
  background-color: $label-hover-background-color;
  border-color: $label-hover-background-color;

  background-image: $label-hover-background-image;
  color: $label-hover-text-color;
}

.ui.labels a.label:hover:before,
a.ui.label:hover:before {
  color: $label-hover-text-color;
}

/*-------------------
        Active
--------------------*/

.ui.active.label {
  background-color: $label-active-background-color;
  border-color: $label-active-background-color;

  background-image: $label-active-background-image;
  color: $label-active-text-color;
}

.ui.active.label:before {
  background-color: $label-active-background-color;
  background-image: $label-active-background-image;
  color: $label-active-text-color;
}

/*-------------------
     Active Hover
--------------------*/

a.ui.labels .active.label:hover,
a.ui.active.label:hover {
  background-color: $label-active-hover-background-color;
  border-color: $label-active-hover-background-color;

  background-image: $label-active-hover-background-image;
  color: $label-active-hover-text-color;
}

.ui.labels a.active.label:before,
a.ui.active.label:before {
  background-color: $label-active-hover-background-color;
  background-image: $label-active-hover-background-image;
  color: $label-active-hover-text-color;
}

/*-------------------
      Visible
--------------------*/

.ui.labels.visible .label,
.ui.label.visible {
  display: inline-block !important;
}

/*-------------------
      Hidden
--------------------*/

.ui.labels.hidden .label,
.ui.label.hidden {
  display: none !important;
}

/*******************************
           Variations
*******************************/

/*-------------------
        Basic
--------------------*/

.ui.basic.label {
  background: $basic-background;
  border: $basic-border;
  color: $basic-color;
  box-shadow: $basic-box-shadow;
}

/* Link */
a.ui.basic.label:hover {
  text-decoration: none;
  background: $basic-hover-background;
  color: $basic-hover-color;
  box-shadow: $basic-hover-border;
}

/* Pointing */
.ui.basic.pointing.label:before {
  border-color: inherit;
}

/*-------------------
       Fluid
--------------------*/

.ui.label.fluid,
.ui.fluid.labels > .label {
  width: 100%;
  box-sizing: border-box;
}

/*-------------------
       Inverted
--------------------*/

.ui.inverted.labels .label,
.ui.inverted.label {
  color: color-text('primary', $inverted: true) !important;
}

/*-------------------
     Horizontal
--------------------*/

.ui.horizontal.labels .label,
.ui.horizontal.label {
  margin: 0 $horizontal-label-margin 0 0;

  padding: $horizontal-label-vertical-padding $horizontal-padding;
  min-width: $horizontal-label-min-width;
  text-align: center;
}

/*-------------------
       Circular
--------------------*/

.ui.circular.labels .label,
.ui.circular.label {
  min-width: $circular-min-size;
  min-height: $circular-min-size;

  padding: $circular-padding !important;

  line-height: 1em;
  text-align: center;
  border-radius: $circular-radius;
}

.ui.empty.circular.labels .label,
.ui.empty.circular.label {
  min-width: 0;
  min-height: 0;
  overflow: hidden;
  width: $empty-circle-size;
  height: $empty-circle-size;
  vertical-align: baseline;
}

/*-------------------
       Pointing
--------------------*/

.ui.pointing.label {
  position: relative;
}

.ui.attached.pointing.label {
  position: absolute;
}

.ui.pointing.label:before {
  background-color: inherit;
  background-image: inherit;
  border-width: 0;
  border-style: solid;
  border-color: $pointing-border-color;
}

/* Arrow */
.ui.pointing.label:before {
  position: absolute;
  content: '';
  transform: rotate(45deg);
  background-image: none;

  z-index: $pointing-triangle-z-index;
  width: $pointing-triangle-size;
  height: $pointing-triangle-size;
  transition: $pointing-triangle-transition;
}

/*--- Above ---*/
.ui.pointing.label,
.ui[class*="pointing above"].label {
  margin-top: $pointing-vertical-distance;
}

.ui.pointing.label:before,
.ui[class*="pointing above"].label:before {
  border-width: $border-width 0 0 $border-width;
  transform: translateX(-50%) translateY(-50%) rotate(45deg);
  top: 0;
  left: 50%;
}

/*--- Below ---*/
.ui[class*="bottom pointing"].label,
.ui[class*="pointing below"].label {
  margin-top: 0;
  margin-bottom: $pointing-vertical-distance;
}

.ui[class*="bottom pointing"].label:before,
.ui[class*="pointing below"].label:before {
  border-width: 0 $border-width $border-width 0;
  top: auto;
  right: auto;
  transform: translateX(-50%) translateY(-50%) rotate(45deg);
  top: 100%;
  left: 50%;
}

/*--- Left ---*/
.ui[class*="left pointing"].label {
  margin-top: 0;
  margin-left: $pointing-horizontal-distance;
}

.ui[class*="left pointing"].label:before {
  border-width: 0 0 $border-width $border-width;
  transform: translateX(-50%) translateY(-50%) rotate(45deg);
  bottom: auto;
  right: auto;
  top: 50%;
  left: 0;
}

/*--- Right ---*/
.ui[class*="right pointing"].label {
  margin-top: 0;
  margin-right: $pointing-horizontal-distance;
}

.ui[class*="right pointing"].label:before {
  border-width: $border-width $border-width 0 0;
  transform: translateX(50%) translateY(-50%) rotate(45deg);
  top: 50%;
  right: 0;
  bottom: auto;
  left: auto;
}

/* Basic Pointing */

/*--- Above ---*/
.ui.basic.pointing.label:before,
.ui.basic[class*="pointing above"].label:before {
  margin-top: $basic-pointing-triangle-offset;
}

/*--- Below ---*/
.ui.basic[class*="bottom pointing"].label:before,
.ui.basic[class*="pointing below"].label:before {
  bottom: auto;
  top: 100%;
  margin-top: - $basic-pointing-triangle-offset;
}

/*--- Left ---*/
.ui.basic[class*="left pointing"].label:before {
  top: 50%;
  left: $basic-pointing-triangle-offset;
}

/*--- Right ---*/
.ui.basic[class*="right pointing"].label:before {
  top: 50%;
  right: $basic-pointing-triangle-offset;
}

/*------------------
   Floating Label
-------------------*/

.ui.floating.label {
  position: absolute;
  z-index: $floating-z-index;
  top: $floating-top-offset;
  left: 100%;
  margin: 0 0 0 $floating-left-offset !important;
}

/*-------------------
        Sizes
--------------------*/

.ui.labels .label,
.ui.label {
  font-size: size('medium');
}

@mixin sizes($size-map) {
  @each $name, $value in $size-map {
    .ui.#{$name}.labels .label,
    .ui.#{$name}.label {
      font-size: size($name);
    }
  }
}

@include sizes($sizes);

/*-------------------
       Colors
--------------------*/

@mixin colors($color-map) {
  @each $name, $color in $color-map {

    /* Color */
    .ui.#{$name}.labels .label,
    .ui.#{$name}.label {
      background-color: $color !important;
      border-color: $color !important;
      color: color-text('primary', $inverted: true) !important;
    }

    /* Link */
    .ui.#{$name}.labels .label:hover,
    a.ui.#{$name}.label:hover {
      background-color: color-hover($color) !important;
      border-color: color-hover($color) !important;
      color: color-text('primary', 'hovered', $inverted: true) !important;
    }

    /* Corner */
    .ui.#{$name}.corner.label,
    .ui.#{$name}.corner.label:hover {
      background-color: transparent !important;
    }

    /* Ribbon */
    .ui.#{$name}.ribbon.label {
      border-color: color-shadow($color) !important;
    }

    /* Basic */
    .ui.basic.#{$name}.label {
      background-color: color-main('light') !important;
      color: $color !important;
      border-color: $color !important;
    }

    .ui.basic.#{$name}.labels a.label:hover,
    a.ui.basic.#{$name}.label:hover {
      background-color: color-main('light') !important;
      color: color-hover($color) !important;
      border-color: color-hover($color) !important;
    }
  }
}