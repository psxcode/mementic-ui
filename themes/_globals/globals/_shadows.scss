/// @author Hugo Giraudel
@function long-shadow($direction, $length, $color, $fade: false, $shadow-count: 100) {
  $direction: to-string($direction);

  $shadows: ();
  $conversion-map: (
		  'to top': 180deg,
		  'to top right': 135deg,
		  'to right top': 135deg,
		  'to right': 90deg,
		  'to bottom right': 45deg,
		  'to right bottom': 45deg,
		  'to bottom': 0deg,
		  'to bottom left': 315deg,
		  'to left bottom': 315deg,
		  'to left': 270deg,
		  'to left top': 225deg,
		  'to top left': 225deg
  );

  @if not(map-has-key($conversion-map, $direction)) {
	@error 'long-shadow: $direction is invalid, #{$direction}';
  }

  $direction: map-get($conversion-map, $direction);

  @for $i from 1 through $shadow-count {
	$current-step: ($i * $length / $shadow-count);
	$current-color: if(not $fade, $color, if(type-of($fade) == 'color', mix($fade, $color, ($i / $shadow-count * 100)), rgba($color, 1 - $i / $shadow-count)));

	$shadows: append($shadows, (sin(0deg + $direction) * $current-step) (cos(0deg + $direction) * $current-step) 0 $current-color, 'comma');
  }

  @return $shadows;
}

@function box-shadow-create($x: 0, $y: 0, $blur: 0, $spread: 0, $inset: false) {
  $shadow: ();

  @if inset {
	$shadow: append($shadow, inset, space);
  }

  $shadow: join($shadow, ($x $y), space);

  @if $blur > 0 {
	$shadow: append($shadow, $blur, space);
  }

  @if $spread > 0 {

	//add blur
	@if $blur == 0 {
	  $shadow: append($shadow, $blur, space);
	}

	$shadow: append($shadow, $spread, space);
  }

  $shadow: append($shadow, black, space);

  @return $shadow;
}

/* Shadow var should be created with box-shadow-create */
@function box-shadow-colorize($shadow, $color) {
  @if type-of($shadow) != 'list' {
	@error 'box-shadow-colorize: invalid $shadow param, #{$shadow}. Should be type-of list';
  }

  @return set-nth($shadow, length($shadow), $color);
}

@function text-shadow-create($x: 0, $y: 0, $blur: 0) {
  $shadow: ();

  $shadow: join($shadow, ($x $y), space);

  @if strip-unit($blur) > 0 {
	$shadow: append($shadow, $blur, space);
  }

  $shadow: append($shadow, black, space);

  @return $shadow;
}

/* Shadow var should be created with text-shadow-create */
@function text-shadow-colorize($shadow, $color) {
  @if type-of($shadow) != 'list' {
	@error 'text-shadow-colorize: invalid $shadow param, #{$shadow}. Should be type-of list';
  }

  @return set-nth($shadow, length($shadow), $color);
}
