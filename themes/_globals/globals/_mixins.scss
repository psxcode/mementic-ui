@mixin overlay($offset: 0, $z: 100) {
  position: absolute;
  content: '';
  top: $offset;
  bottom: $offset;
  left: $offset;
  right: $offset;

  z-index: $z;
}

@mixin loader($color-active, $color-fill, $size-px: 32px, $thickness: 2px, $z: 101, $indeterminate: false) {
  $direction: if(to-bool($indeterminate), reverse, normal);
  $loader-speed: if(to-bool($indeterminate), 1.2s, 0.6s);

  position: absolute;
  content: '';
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  width: $size-px;
  height: $size-px;
  margin: auto;

  animation: loader-animation $loader-speed linear;
  animation-iteration-count: infinite;
  animation-direction: $direction;

  border: $thickness solid $color-fill;
  border-color: $color-active $color-fill $color-fill;
  border-radius: 50%;

  z-index: $z;
}

%clearfix {
  content: '';
  display: block;
  clear: both;
  height: 0;
  visibility: hidden;
}

@mixin vp-transition($values) {
  $vendors: '-webkit-' '-moz-' '-o-' '';

  @each $vendor in $vendors {
	#{$vendor}transition: $values;
  }
}

@mixin vp-transition-property($values) {
  $vendors: '-webkit-' '-moz-' '-o-' '';

  @each $vendor in $vendors {
	#{$vendor}transition-property: $values;
  }
}

@mixin vp-transition-delay($values) {
  $vendors: '-webkit-' '-moz-' '-o-' '';

  @each $vendor in $vendors {
	#{$vendor}transition-delay: $values;
  }
}

@mixin vp-transition-timing-function($values) {
  $vendors: '-webkit-' '-moz-' '-o-' '';

  @each $vendor in $vendors {
	#{$vendor}transition-timing-function: $values;
  }
}

@mixin vp-transition-duration($values) {
  $vendors: '-webkit-' '-moz-' '-o-' '';

  @each $vendor in $vendors {
	#{$vendor}transition-duration: $values;
  }
}

/* options: none, auto, text, contain, all */
@mixin vp-user-select($option: none) {
  $vendors: '-webkit-' '-moz-' '-ms-' '';

  @each $vendor in $vendors {
	#{$vendor}user-select: $option;
  }
}

@mixin vp-border-radius($value) {
  $vendors: '-webkit-' '-moz-' '';

  @each $vendor in $vendors {
	#{$vendor}border-radius: $value;
  }
}

@mixin vp-left-border-radius($value) {
  -webkit-border-top-left-radius: $value;
  -webkit-border-bottom-left-radius: $value;
  -moz-border-radius-topleft: $value;
  -moz-border-radius-bottomleft: $value;
  border-top-left-radius: $value;
  border-bottom-left-radius: $value;
}

@mixin vp-right-border-radius($value) {
  -webkit-border-top-right-radius: $value;
  -webkit-border-bottom-right-radius: $value;
  -moz-border-radius-topright: $value;
  -moz-border-radius-bottomright: $value;
  border-top-right-radius: $value;
  border-bottom-right-radius: $value;
}

@mixin vp-top-border-radius($value) {
  -webkit-border-top-left-radius: $value;
  -webkit-border-top-right-radius: $value;
  -moz-border-radius-topleft: $value;
  -moz-border-radius-topright: $value;
  border-top-left-radius: $value;
  border-top-right-radius: $value;
}

@mixin vp-bottom-border-radius($value) {
  -webkit-border-bottom-right-radius: $value;
  -webkit-border-bottom-left-radius: $value;
  -moz-border-radius-bottomright: $value;
  -moz-border-radius-bottomleft: $value;
  border-bottom-right-radius: $value;
  border-bottom-left-radius: $value;
}

@mixin vp-placeholder {
  $placeholders: ':-moz-' ':-webkit-input-' '-moz-' '-ms-input-';

  @each $placeholder in $placeholders {
	&:#{$placeholder}placeholder {
	  @content;
	}
  }
}

/// Contexts
/// @author Hugo Giraudel
/// @param {String | List} $context
@mixin when-inside($context) {
  #{$context} & {
	@content;
  }
}
