/* Some global loader styles defined in site.variables */
// @loaderSpeed
// @loaderLineWidth
// @loaderFillColor
// @loaderLineColor
// @invertedLoaderFillColor
// @invertedLoaderLineColor

/*-------------------
      Standard
--------------------*/

$shape-border-color: $loader-line-color transparent transparent;
$inverted-shape-border-color: $inverted-loader-line-color transparent transparent;

/*-------------------
        Types
--------------------*/

/* Text */
$text-distance: size('mini');
$loader-text-color: color-text();
$inverted-loader-text-color: color-text($inverted: true);

/*-------------------
        States
--------------------*/

$indeterminate-direction: reverse;
$indeterminate-speed: (2 * $loader-speed);

/*-------------------
      Variations
--------------------*/

/* Exact Sizes (Avoids Rounding Errors) */
$loader-sizes: map-zip(map-keys($sizes), (
        px-em(14), // mini
        px-em(16), // tiny
        px-em(24), // small
        px-em(32), // medium
        px-em(48), // large
        px-em(52), // big
        px-em(58), // huge
        px-em(64) // massive
));

@function loader-size($variant) {
  $variant: to-string($variant);
  @return map-get($loader-sizes, $variant);
}

$loader-offsets: map-zip(map-keys($sizes), (
    0 0 0 (loader-size('mini') * -0.5),
    0 0 0 (loader-size('tiny') * -0.5),
    0 0 0 (loader-size('small') * -0.5),
    0 0 0 (loader-size('medium') * -0.5),
    0 0 0 (loader-size('large') * -0.5),
    0 0 0 (loader-size('big') * -0.5),
    0 0 0 (loader-size('huge') * -0.5),
    0 0 0 (loader-size('massive') * -0.5),
));

@function loader-offset($variant) {
  $variant: to-string($variant);
  @return map-get($loader-offsets, $variant);
}
