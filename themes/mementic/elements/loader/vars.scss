/* Some global loader styles defined in site.variables */
// @loaderSpeed
// @loaderLineWidth
// @loaderFillColor
// @loaderLineColor
// @invertedLoaderFillColor
// @invertedLoaderLineColor

/*-------------------
      Standard
--------------------*/

@function shape-border-color($inverted: false) {
  @return if(to-bool($inverted),
		  color-text(true) $color-mid $color-mid,
		  color-text() $color-light $color-light);
}

@function shape-border($inverted: false) {
  @return if(to-bool($inverted),
		  $loader-line-width solid $inverted-loader-fill-color,
		  $loader-line-width solid $loader-fill-color);
}

@function box-shadow($inverted: false) {
  @return none;
}

/*-------------------
        Types
--------------------*/

/* Text */
$text-distance: size('mini');

/*-------------------
        States
--------------------*/

$indeterminate-direction: reverse;
$indeterminate-speed: (2 * $loader-speed);

/*-------------------
      Variations
--------------------*/

/* Exact Sizes (Avoids Rounding Errors) */
$loader-sizes: map-zip(map-keys($sizes), (
		14px, // mini
		16px, // tiny
		24px, // small
		32px, // medium
		48px, // large
		52px, // big
		58px, // huge
		64px // massive
));

@function loader-size($variant) {
  $variant: to-string($variant);
  @return map-get($loader-sizes, $variant);
}

$loader-offsets: map-zip(map-keys($sizes), (
		0 0 0 (loader-size('mini') * -0.5),
		0 0 0 (loader-size('tiny') * -0.5),
		0 0 0 (loader-size('small') * -0.5),
		0 0 0 (loader-size('medium') * -0.5),
		0 0 0 (loader-size('large') * -0.5),
		0 0 0 (loader-size('big') * -0.5),
		0 0 0 (loader-size('huge') * -0.5),
		0 0 0 (loader-size('massive') * -0.5),
));

@function loader-offset($variant) {
  $variant: to-string($variant);
  @return map-get($loader-offsets, $variant);
}
