/* Selectors */
$c-button: 'button' !default;

@function selector-element-button() {
  @return validate-selector('.#{$c-button}');
}

@function selector-ui-button() {
  @return selector-element-button() + selector-element-ui();
}

@function selector-ui-size-button($name) {
  @return selector-ui-button() + validate-selector('.#{$name}');
}

@function selector-ui-color-button($name, $inverted) {
  @return selector-ui-button() + validate-selector('.#{$name}') + if($inverted, validate-selector('.#{$c-inverted}'), '');
}

/* Button */
$display: inline-block;

$vertical-margin: 0;
$horizontal-margin: 0.25rem;

@function margin() {
  @return 0 $horizontal-margin $vertical-margin 0
}

/* Button defaults to using same height as input globally */
$vertical-padding: $input-vertical-padding;
$horizontal-padding: 1.5em;

@function padding() {
  @return $vertical-padding $horizontal-padding $vertical-padding;
}

/* Text */
@function font($size-name) {
  @return bold #{size($size-name)}/#{line-height()} font-family();
}

$text-transform: none;
$vertical-align: baseline;
@function border-radius() {
  @return unit-rem($border-radius-default);
}

/* Background */
@function background($inverted: false) {
  @return if($inverted, transparent, #E0E1E2);
}

@function background-hover($inverted: false) {
  @return #CACBCD;
}

@function background-focus($inverted: false) {
  @return #CACBCD;
}

@function background-down($inverted: false) {
  @return #BABBBC;
}

@function background-active($inverted: false) {
  @return #C0C1C2;
}

@function background-active-hover($inverted: false) {
  @return #C0C1C2;
}

@function background-colorize($color, $inverted: false) {
  @return if($inverted, transparent, $color);
}

@function background-colorize-hover($color, $inverted: false) {
  @return color-hover($color);
}

@function background-colorize-focus($color, $inverted: false) {
  @return color-focus($color);
}

@function background-colorize-down($color, $inverted: false) {
  @return color-down($color);
}

@function background-colorize-active($color, $inverted: false) {
  @return color-active($color);
}

@function background-colorize-active-hover($color, $inverted: false) {
  @return color-hover($color);
}

/* Shadows */
$inverted-box-shadow-border: box-shadow-create(0, 0, 0, 2px, true);
@function box-shadow($inverted: false) {
  @return if($inverted,
		  box-shadow-colorize($inverted-box-shadow-border, color-divider($inverted)),
		  none);
}

@function colorize-box-shadow($color, $inverted: false) {
  @return if($inverted,
		  box-shadow-colorize($inverted-box-shadow-border, colorize-divider($color)),
		  none);
}

/* Transition */
@function transition() {
  @return opacity $duration-default $easing-default,
  background-color $duration-default $easing-default,
  color $duration-default $easing-default,
  box-shadow $duration-default $easing-default,
  background $duration-default $easing-default;
}

@function loading-transition() {
  @return opacity $duration-default $easing-default;
}

/* Icon */
$icon-height: size('tiny');
$icon-opacity: 0.8;
$icon-distance: px-em(6);
$icon-transition: opacity $duration-default $easing-default;
$icon-vertical-align: middle;

$icon-margin: 0 $icon-distance 0 ($icon-distance * -0.5);
$right-icon-margin: 0 ($icon-distance * -0.5) 0 $icon-distance;

/* Loader */
$inverted-loader-fill-color: rgba(0, 0, 0, 0.15);

/*-------------------
        Types
--------------------*/

/* Icon */
$icon-button-opacity: 0.9;

/* Labeled */
$labeled-label-font-size: size('medium');
$labeled-label-align: center;
$labeled-label-padding: 0;
$labeled-label-border-color: color-divider();
$labeled-tag-label-size: 1.85em; /* hypotenuse of triangle */
$labeled-icon-margin: 0;

/* Labeled Icon */
$labeled-icon-width: 1em + ($vertical-padding * 2);
$labeled-icon-background-color: rgba(0, 0, 0, 0.05);
$labeled-icon-padding: ($horizontal-padding + $labeled-icon-width);
$labeled-icon-border: transparent;
$labeled-icon-color: $color-mid;

$labeled-icon-left-shadow: -1px 0 0 0 $labeled-icon-border inset;
$labeled-icon-right-shadow: 1px 0 0 0 $labeled-icon-border inset;

/*-------------------
      Variations
--------------------*/

/* Attached */
$attached-offset: -1px;
$attached-horizontal-padding: 0.75em;
$attached-z-index: 2;

/* Floated */
$floated-margin: 0.25em;

/* Animated */
$animated-vertical-align: middle;
$animated-z-index: 1;
$animation-duration: 0.3s;
$animation-easing: ease;
$fade-scale-high: 1.5;
$fade-scale-low: 0.75;

$auto-include-colors-info: true;

%props-button {

  // positioning
  display: $display;

  // size
  margin: margin();
  padding: padding();
  min-height: 1em;

  // text
  font: font('medium');
  text-align: center;
  text-decoration: none;
  text-transform: $text-transform;
  vertical-align: $vertical-align;

  // border
  border: none;
  @include vp-border-radius(border-radius());

  // misc
  cursor: pointer;
  outline: none;
  @include vp-user-select(none);
  @include vp-transition(transition());
}

%props-button-hover {
}

%props-button-focus {
}

%props-button-down {
}

%props-button-disabled {

  // misc
  cursor: default;
  pointer-events: none;
}

%props-left-floated-button {

  float: left;
  margin-left: 0;
  margin-right: $floated-margin;
}

%props-right-floated-button {

  float: right;
  margin-right: 0;
  margin-left: $floated-margin;
}

/* Color mixins */
@mixin props-button-color($inverted) {

  // colors
  color: color-text($inverted);
  background: background($inverted);

  // border
  box-shadow: box-shadow($inverted);
}

@mixin props-button-color-hover($inverted) {

  // colors
  color: color-text-hovered($inverted);
  background: background-hover($inverted);
}

@mixin props-button-color-focus($inverted) {

  // colors
  color: color-text-selected($inverted);
  background: background-focus($inverted);
}

@mixin props-button-color-down($inverted) {

  // colors
  color: color-text-pressed($inverted);
  background: background-down($inverted);
}

@mixin props-button-color-disabled($inverted) {

  // colors
  opacity: $opacity-disabled;
}

@mixin props-button-colorize($name, $color, $inverted) {

  // color
  color: color-text($inverted);
  background: background-colorize($color, $inverted);

  // border
  box-shadow: colorize-box-shadow($color, $inverted);

  @content;
}

@mixin props-button-colorize-hover($name, $color, $inverted) {

  // color
  color: color-text-hovered($inverted);
  background: background-colorize-hover($color, $inverted);

  // border
  box-shadow: none;

  @content;
}

@mixin props-button-colorize-focus($name, $color, $inverted) {

  // color
  color: color-text-selected($inverted);
  background: background-colorize-focus($color, $inverted);

  // border
  box-shadow: none;

  @content;
}

@mixin props-button-colorize-down($name, $color, $inverted) {

  // color
  color: color-text-pressed($inverted);
  background: background-colorize-down($color, $inverted);

  // border
  box-shadow: none;

  @content;
}

@mixin props-button-colorize-disabled($name, $color, $inverted) {

  @content;
}

@mixin props-button($inverted) {

  @extend %props-button;

  // colors
  @include props-button-color($inverted);

  // user content
  @content;
}

@mixin props-button-hover($inverted) {

  @extend %props-button-hover !optional;

  // colors
  @include props-button-color-hover($inverted);

  // user content
  @content;
}

@mixin props-button-focus($inverted) {

  @extend %props-button-focus !optional;

  // colors
  @include props-button-color-focus($inverted);

  // user content
  @content;
}

@mixin props-button-down($inverted) {

  @extend %props-button-down !optional;

  // colors
  @include props-button-color-down($inverted);

  // user content
  @content;
}

@mixin props-button-disabled($inverted) {

  @extend %props-button-disabled !optional;

  // colors
  @include props-button-color-disabled($inverted);

  @content;
}

/* Do not using placeholders here because of parameters */
@mixin props-size-button($name, $value) {

  font-size: size($name);

  @content;
}

@mixin props-left-floated-button() {

  @extend %props-left-floated-button;

  @content;
}

@mixin props-right-floated-button() {

  @extend %props-right-floated-button;

  @content;
}

/* User mixins */
@mixin user-props-button($inverted) {
  @include props-button($inverted);
}

@mixin user-props-button-hover($inverted) {
  @include props-button-hover($inverted);
}

@mixin user-props-button-focus($inverted) {
  @include props-button-focus($inverted);
}

@mixin user-props-button-down($inverted) {
  @include props-button-down($inverted);
}

@mixin user-props-button-disabled($inverted) {
  @include props-button-disabled($inverted);
}

@mixin user-props-size-button($name, $value) {
  @include props-size-button($name, $value);
}

@mixin user-props-left-floated-button() {
  @include props-left-floated-button;
}

@mixin user-props-right-floated-button() {
  @include props-right-floated-button;
}

@mixin user-props-button-colorize($name, $color, $inverted) {
  @include props-button-colorize($name, $color, $inverted);
}

@mixin user-props-button-colorize-hover($name, $color, $inverted) {
  @include props-button-colorize-hover($name, $color, $inverted);
}

@mixin user-props-button-colorize-focus($name, $color, $inverted) {
  @include props-button-colorize-focus($name, $color, $inverted);
}

@mixin user-props-button-colorize-down($name, $color, $inverted) {
  @include props-button-colorize-down($name, $color, $inverted);
}

@mixin user-props-button-colorize-disabled($name, $color, $inverted) {
  @include props-button-colorize-disabled($name, $color, $inverted);
}

@mixin selector-button() {

  /* Button */
  #{selector-ui-button()} {
	@include user-props-button(false);

	&:hover {
	  @include user-props-button-hover(false);
	}

	&:focus {
	  @include user-props-button-focus(false);
	}

	&:active {
	  @include user-props-button-down(false);
	}

	&.#{$c-disabled},
	&:disabled {
	  @include user-props-button-disabled(false);
	}
  }
}

@mixin selector-inverted-button() {

  /* Inverted Button */
  .#{$c-inverted} > #{selector-ui-button()},
  #{selector-ui-button()}.#{$c-inverted} {
	@include user-props-button(true);

	&:hover {
	  @include user-props-button-hover(true);
	}

	&:focus {
	  @include user-props-button-focus(true);
	}

	&:active {
	  @include user-props-button-down(true);
	}

	&.#{$c-disabled},
	&:disabled {
	  @include user-props-button-disabled(true);
	}
  }
}

@mixin selector-size-button($name, $value) {

  /* Size Button */
  #{selector-ui-size-button($name)} {
	@include user-props-size-button($name, $value);
  }
}

@mixin selector-floated-button() {
  #{selector-ui-button()}.#{$c-floated} {
	@include user-props-left-floated-button;
  }
}

@mixin selector-right-floated-button() {
  #{selector-ui-button()}#{selector-right-floated()} {
	@include user-props-right-floated-button;
  }
}

@mixin user-selector-button() {
  @include selector-button;
}

@mixin user-selector-inverted-button() {
  @include selector-inverted-button;
}

@mixin user-selector-size-button($name, $value) {
  @include selector-size-button($name, $value);
}

@mixin user-selector-floated-button() {
  @include selector-floated-button;
}

@mixin user-selector-right-floated-button() {
  @include selector-right-floated-button;
}

/* Color Variations */
@mixin user-colorize($color-map) {

  @each $name, $color in $color-map {

	/*--- Standard ---*/
	#{selector-ui-color-button($name, false)} {
	  @include user-props-button-colorize($name, $color, false);

	  &:hover {
		@include user-props-button-colorize-hover($name, $color, false);
	  }

	  &:focus {
		@include user-props-button-colorize-focus($name, $color, false);
	  }

	  &:active {
		@include user-props-button-colorize-down($name, $color, false);
	  }

	  &:disabled,
	  &.#{$c-disabled} {
		@include user-props-button-colorize-disabled($name, $color, false);
	  }
	}

	/* Inverted */
	.#{$c-inverted} > #{selector-ui-color-button($name, false)},
	#{selector-ui-color-button($name, true)} {
	  @include user-props-button-colorize($name, $color, true);

	  &:hover {
		@include user-props-button-colorize-hover($name, $color, true);
	  }

	  &:focus {
		@include user-props-button-colorize-focus($name, $color, true);
	  }

	  &:active {
		@include user-props-button-colorize-down($name, $color, true);
	  }

	  &:disabled,
	  &.#{$c-disabled} {
		@include user-props-button-colorize-disabled($name, $color, true);
	  }
	}

  }

  @if mixin_exists(group-colorize) {
	@include group-colorize($color-map);
  }
}
