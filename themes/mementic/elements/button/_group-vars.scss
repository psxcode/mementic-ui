/* Selectors */
$c-button-group: 'buttons' !default;

@function selector-element-group() {
  @return validate-selector('.#{$c-button-group}');
}

@function selector-ui-group() {
  @return selector-element-group() + selector-element-ui();
}

@function selector-ui-color-group($name, $inverted) {
  @return selector-ui-group() + validate-selector('.#{$name}') + if($inverted, validate-selector('.#{$c-inverted}'), '');
}

@function group-margin() {
  @return $vertical-margin $horizontal-margin 0 0;
}

@mixin props-group() {

  // positioning
  display: inline-flex;
  flex-direction: row;

  // text
  // font: font('medium');
  vertical-align: baseline;

  // size
  margin: group-margin();

  // border
  @include vp-border-radius(border-radius());

  /* Clearfix */
  &::after {
	@extend %clearfix;
  }

  @content;
}

@mixin props-group-button() {

  // separation from selector '.ui.button'
  @extend %props-button;

  // positioning
  flex: 1 0 auto;

  // size
  margin: 0;

  // border
  @include vp-border-radius(0);

  &:first-child {
	@include vp-left-border-radius(border-radius());
  }

  &:last-child {
	@include vp-right-border-radius(border-radius());
  }

  @content;
}

@mixin props-vertical-group() {

  // positioning
  flex-direction: column;

  @content;
}

@mixin props-vertical-group-button() {

  // positioning
  display: block;

  &:first-child {

	// border
	@include vp-border-radius(0);
	@include vp-top-border-radius(border-radius());
  }

  &:last-child {

	// border
	@include vp-border-radius(0);
	@include vp-bottom-border-radius(border-radius());
  }

  @content;
}

@mixin props-size-group($name, $value) {

  @content;
}

@mixin props-size-group-button($name, $value) {

  // extending selector. cannot extend placeholder with params
  @extend #{selector-ui-size-button($name)};

  @content;
}

/* Multiple includes of mixin 'props-number-group' */
%props-number-group {
  display: flex;
}

@mixin props-number-group($index) {

  @extend %props-number-group;

  @content;
}

/* Multiple includes od mixin 'props-number-group-button' */
%props-number-group-button {
  flex: 1 1 0;
}

@mixin props-number-group-button($index) {

  @extend %props-number-group-button;

  @content;
}

@mixin props-left-floated-group() {

  @include user-props-left-floated-button;

  @content;
}

@mixin props-right-floated-group() {

  @include user-props-right-floated-button;

  @content;
}

@mixin props-color-group($name, $color, $inverted) {

  @content;
}

/* User mixins */
@mixin user-group() {
  @include props-group;
}

@mixin user-group-button() {
  @include props-group-button;
}

@mixin user-group-button-hover() {
  @include props-button-hover;
}

@mixin user-group-button-focus() {
  @include props-button-focus;
}

@mixin user-group-button-down() {
  @include props-button-down;
}

@mixin user-group-button-disabled() {
  @include props-button-disabled;
}

@mixin user-vertical-group() {
  @include props-vertical-group;
}

@mixin user-vertical-group-button() {
  @include props-vertical-group-button;
}

@mixin user-size-group($name, $value) {
  @include props-size-group($name, $value);
}

@mixin user-size-group-button($name, $value) {
  @include props-size-group-button($name, $value);
}

@mixin user-number-group($index) {
  @include props-number-group($index);
}

@mixin user-number-group-button($index) {
  @include props-number-group-button($index);
}

@mixin user-left-floated-group() {
  @include props-left-floated-group;
}

@mixin user-right-floated-group() {
  @include props-right-floated-group;
}

/* Color Variations */
@mixin props-group-button-colorize($name, $color, $inverted) {
  @extend #{selector-ui-color-button($name, $inverted)};
}

@mixin group-colorize($color-map) {

  $ui-group: selector-ui-group();

  @each $name, $color in $color-map {

	/* Colored Group */
	#{$ui-group}.#{$name} {
	  @include props-color-group($name, $color, false);
	}

	/* Colored Group Button */
	#{$ui-group}.#{$name} > .#{$c-button},
	#{$ui-group} > .#{$c-button}.#{$name} {
	  @include props-group-button-colorize($name, $color, false);
	}

	/* Inverted Colored Group */
	.#{$c-inverted} > #{$ui-group}.#{$name},
	#{$ui-group}.#{$name}.#{$c-inverted} {
	  @include props-color-group($name, $color, true);
	}

	/* Inverted Colored Group Button */
	.#{$c-inverted} > #{$ui-group}.#{$name} > .#{$c-button},
	.#{$c-inverted} > #{$ui-group} > .#{$c-button}.#{$name},
	#{$ui-group}.#{$name}.#{$c-inverted} > .#{$c-button},
	#{$ui-group}.#{$c-inverted} > .#{$c-button}.#{$name}	{
	  @include props-group-button-colorize($name, $color, true);
	}
  }
}
