/* Selectors */
$ui-button-group: selector-ui-button-group();

/* Group */
#{$ui-button-group} {

  @include user-group;

  /* Group Button Type */
  > .#{$c-button} {

	@include user-group-button;

	// States
	&:hover {
	  @include user-group-button-hover;
	}

	&:focus {
	  @include user-group-button-focus;
	}

	&:active {
	  @include user-group-button-down;
	}

	&.#{$c-disabled},
	&:disabled {
	  @include user-group-button-disabled;
	}
  }
}

/* Vertical Group */
#{$ui-button-group}.#{$c-vertical} {

  @include user-vertical-group;

  /* Group Button Type */
  > .#{$c-button} {

	@include user-vertical-group-button;
  }
}

/* Sizes Variation */
@each $name, $value in $sizes {

  #{$ui-button-group}.#{$name} {

	@include user-size-group($name, $value);

	> .#{$c-button} {
	  @include user-size-group-button($name, $value);
	}
  }
}

/* Numbers */
@for $i from 2 through 16 {

  #{$ui-button-group}:not(.#{$c-vertical}).#{number-name($i)} {

	@include user-number-group($i);

	> .#{$c-button} {
	  @include user-number-group-button($i)
	}
  }
}

/* Floated Group Variation */
#{$ui-button-group}.#{$c-floated} {

  @include user-left-floated-group;
}

#{$ui-button-group}#{$right-floated} {

  @include user-right-floated-group;
}

/* Color Variations */
@mixin _group-colorize($name, $color, $inverted) {

  @include user-color-button($name, $color, $inverted);

  &:hover {
	@include user-color-button-hover($name, $color, $inverted);
  }

  &:focus {
	@include user-color-button-focus($name, $color, $inverted);
  }

  &:active {
	@include user-color-button-down($name, $color, $inverted);
  }

  &:disabled,
  &.#{$c-disabled} {
	@include user-color-button-disabled($name, $color, $inverted);
  }
}

@mixin group-colorize($color-map) {
  @each $name, $color in $color-map {

	/*--- Standard ---*/
	#{selector-ui-color-button($name)} {
	  @include _group-colorize($name, $color, false);
	}

	/* Inverted */
	.#{$c-inverted} > #{selector-ui-color-button($name)},
	#{selector-ui-inverted-color-button($name)} {
	  @include _group-colorize($name, $color, true);
	}
  }
}


/* Inverted */

/*
.#{$c-inverted} > #{$ui-button-group} > .#{$c-button},
.#{$c-inverted} > #{$ui-button},
#{$ui-button-group}.#{$c-inverted} > .#{$c-button},
#{$ui-button}.#{$c-inverted} {

  color: color-text(true);
  background: background(true);
  box-shadow: box-shadow(true);

  &:hover {
	color: color-text-hovered();
	background: background-hover(true);
	box-shadow: none;
  }

  &:focus {
	color: color-text-selected();
	background: background-focus(true);
	box-shadow: none;
  }

  &:active {
	color: color-text-pressed();
	background: background-down(true);
	box-shadow: none;
  }

  &.#{$c-active} {
	color: color-text-selected();
	background: background-active(true);
	box-shadow: none;
  }
}
*/

/* Inverted Group */
/*
.#{$c-inverted} > #{$ui-button-group},
#{$ui-button-group}.#{$c-inverted} {
  border: 2px solid color-divider(true);

  > .#{$c-button} {
	box-shadow: none;
	border: none;
	border-left: 2px solid color-divider(true);

	&:first-child {
	  border: none;
	}
  }
}
*/

/* Inverted Vertical Group */
/*
.#{$c-inverted} > #{$ui-button-group}.#{$c-vertical},
#{$ui-button-group}.#{$c-inverted}.#{$c-vertical} {

  > .#{$c-button} {
	border: none;
	border-top: 2px solid color-divider(true);

	&:first-child {
	  border: none;
	}
  }
}
*/

