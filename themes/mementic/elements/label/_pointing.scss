/*-------------------
       Pointing
--------------------*/

/* Shortcuts */
$up-pointing: c-up-pointing();
$down-pointing: c-down-pointing();
$left-pointing: c-left-pointing();
$right-pointing: c-right-pointing();

#{$ui-label} {

  /* Pointing */
  &.#{$c-pointing} {
	position: relative;

	&::before {
	  background-color: inherit;
	  background-image: inherit;
	  border-width: 0;
	  border-style: solid;
	  border-color: $pointing-border-color;
	}

	/* Attached */
	&.#{$c-attached} {
	  position: absolute;
	}

	/* Arrow */
	&::before {
	  position: absolute;
	  content: '';
	  transform: rotate(45deg);
	  background-image: none;

	  z-index: $pointing-triangle-z-index;
	  width: $pointing-triangle-size;
	  height: $pointing-triangle-size;
	  transition: $pointing-triangle-transition;
	}
  }

  /*--- Above ---*/
  &.#{$c-pointing},
  &#{$down-pointing} {
	margin-top: $pointing-vertical-distance;

	&::before {
	  border-width: $border-width 0 0 $border-width;
	  transform: translateX(-50%) translateY(-50%) rotate(45deg);
	  top: 0;
	  left: 50%;
	}

	/* Basic */
	&.#{$c-basic}::before {
	  margin-top: $basic-pointing-triangle-offset;
	}
  }

  /*--- Below ---*/
  &#{$up-pointing} {
	margin-top: 0;
	margin-bottom: $pointing-vertical-distance;

	&::before {
	  border-width: 0 $border-width $border-width 0;
	  bottom: auto;
	  right: auto;
	  transform: translateX(-50%) translateY(-50%) rotate(45deg);
	  top: 100%;
	  left: 50%;
	}

	/* Basic */
	&.#{$c-basic}::before {
	  margin-top: - $basic-pointing-triangle-offset;
	}
  }

  /*--- Left ---*/
  &#{$left-pointing} {
	margin-top: 0;
	margin-left: $pointing-horizontal-distance;

	&::before {
	  border-width: 0 0 $border-width $border-width;
	  transform: translateX(-50%) translateY(-50%) rotate(45deg);
	  bottom: auto;
	  right: auto;
	  top: 50%;
	  left: 0;
	}

	/* Basic */
	&.#{$c-basic}::before {
	  left: $basic-pointing-triangle-offset;
	}
  }

  /*--- Right ---*/
  #{$right-pointing} {
	margin-top: 0;
	margin-right: $pointing-horizontal-distance;

	&::before {
	  border-width: $border-width $border-width 0 0;
	  transform: translateX(50%) translateY(-50%) rotate(45deg);
	  top: 50%;
	  right: 0;
	  bottom: auto;
	  left: auto;
	}

	/* Basic */
	&.#{$c-basic}::before {
	  right: $basic-pointing-triangle-offset;
	}
  }
}